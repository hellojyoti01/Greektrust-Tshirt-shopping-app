import Head from "next/head";

import styles from "@/styles/Home.module.css";
import { useSelector, useDispatch } from "react-redux";
import { useEffect, useState, useDeferredValue, useCallback } from "react";
import { fetchProduct } from "../store/productSlice";
import { filterProductQuery } from "../store/productSlice";
import Aside from "@/components/Aside";
import Product from "@/components/Product";
import Navigation from "@/components/Navigation";

export default function Home() {
	//*Search Result search in searchbox and filter with product
	const [query, setQuery] = useState("");
	//* Decide Aside bar Open Or not
	const [isOpen, setisOpen] = useState(0);

	//*Check windowwidth in useEffect bcz next js use serverside so outside of useEffect it undefined
	const [windowWidth, setWindowWidth] = useState(true);

	//* Defer The Updated Part of UI
	const deferValue = useDeferredValue(query);

	const { product, loading, status, error, filter_product } = useSelector(
		(store) => {
			const { product, loading, status, error, filter_product } = store.product;
			return {
				product,
				loading,
				status,
				error,
				filter_product,
			};
		}
	);

	const dispatch = useDispatch();
	useEffect(() => {
		dispatch(fetchProduct());
	}, []);

	useEffect(() => {
		dispatch(filterProductQuery(deferValue));
		setWindowWidth(window?.innerWidth);
	}, [deferValue]);

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link
					rel='stylesheet'
					href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'
				></link>
				<link
					rel='stylesheet'
					href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'
				></link>
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={styles.main}>
				<div className={styles.nav}>
					<Navigation />
				</div>
				<div className={styles.container}>
					{windowWidth >= 1120 ? (
						<div className={styles.aside}>
							<Aside />{" "}
						</div>
					) : isOpen ? (
						<div className={styles.aside}>
							<Aside />{" "}
						</div>
					) : (
						""
					)}

					<div className={styles.menu}>
						<div className={styles.search_container}>
							<div className={styles.search_box}>
								<input
									type='text'
									className={styles.input}
									placeholder='Search..'
									name='search'
									value={query}
									onChange={(e) => setQuery(e.target.value)}
								/>
								<button
									type='submit'
									className={styles._hidden}
									onClick={() => setisOpen(!isOpen)}
								>
									{isOpen ? (
										<i className='fa fa-filter'></i>
									) : (
										<i className='fa fa-search'></i>
									)}
								</button>{" "}
							</div>
						</div>
						<div className={styles.product_list}>
							{loading && "Lodeing Spinner"}
							{filter_product?.length >= 1 ? (
								<Product product={filter_product} />
							) : (
								<Product product={product} />
							)}
						</div>
					</div>
				</div>
			</main>
		</>
	);
}
